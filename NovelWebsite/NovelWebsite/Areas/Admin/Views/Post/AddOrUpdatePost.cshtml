@{
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    string error = TempData["error"] as string;
    string alert = TempData["alert"] as string;
    int categoryId = Model != null ? Model.CategoryId : -1;
}

<link rel="stylesheet" href="~/css/admin/adminpost.css">

<div class="body flex-grow-1 px-3">
    <div class="container-lg">
        <div class="row">
            @*<div class="col-md-3">
                <div class="box box-primary">
                    <div class="box-body box-profile" id="author-info">
                    </div>
                </div>
            </div>*@
            <!-- /.col -->
            <div class="col-md-12">
                <div class="box box-primary">
                    <form method="post" action="/Admin/Blog/AddOrUpdate">
                        <div class="box-header with-border">
                            <h3 class="box-title">Quản lý bài viết</h3>
                        </div>
                        <div class="box-body">
                            @{
                                if (alert != null)
                                {
                                    <div class="callout callout-success">
                                        <p>@alert</p>
                                    </div>
                                }
                            }
                            <input type="text" name="id" value="@(Model == null ? 0 : @Model.Id)" hidden />
                            <input type="text" name="avatarId" id="image-file-id" value="@(Model == null ? 0 : @Model.AvatarId)" hidden />
                            <input type="text" name="avatar" id="image-file-path" value="@(Model == null ? "" : @Model.Avatar)" hidden />
                            <input type="text" name="status" id="post-status" value="@(Model == null ? 0 : @Model.Status)" hidden />
                            <input type="text" name="categoryId" id="category-id" value="@(Model == null ? 0 : @Model.CategoryId)" hidden />
                            <input type="text" name="status" id="post-status" value="@(Model == null ? 0 : @Model.Status)" hidden />
                            <div class="form-group">
                                <label for="exampleInputFile">Title</label>
                                <input class="form-control" placeholder="Tiêu đề:" value="@(Model == null ? "" : Model.Title)" name="title">
                            </div>
                            <div class="form-group">
                                <label for="exampleInputFile">Description</label>
                                <input class="form-control" placeholder="Description:" value="@(Model == null ? "" : Model.Description)" name="description">
                            </div>
                            <div class="form-group">
                                <label for="exampleInputFile">Nội dung</label>
                                @*<textarea id="txt-content" class="form-control" style="height: 300px" name="content" value="@Html.Raw(Model == null ? "" : Model.Content)"></textarea>*@
                                @*<div id="toolbar-container"></div>
                                <div id="editor"></div>*@
                            </div>
                            @*<div class="form-group">
                                <label for="exampleInputFile">Category</label>
                                <select class="form-control select2" id="category-blog" style="width: 100%;">
                                </select>
                            </div>
                            <div class="form-group">
                                <label for="exampleInputFile">Tags</label><br />
                                @{
                                    var tags = "";
                                    if (Model != null)
                                    {
                                        foreach (var tag in Model.Tag)
                                        {
                                            tags += tag + ",";
                                        }
                                    }
                                }
                                <input type="text" class="form-control" placeholder="Tags:" value="@tags" name="tag" id="tags-input" data-role="tagsinput">
                            </div>
                            <div class="form-group">
                                <label for="exampleInputFile">Ảnh đại diện</label>
                                <div class="col-md-12 text-center img-upload">
                                    <img src="@(Model != null ? Model.Avatar : "/image/logo.jpg")" id="image-upload" class="rounded mx-auto d-block" style="width: 256px" />
                                </div>
                                <input type="file" id="image-upload" name="fileUpload" class="input-file">
                                <p class="help-block">Chọn ảnh đại diện cho bài viết</p>
                            </div>*@
                            <div class="input-comment">
                                <div id="post-toolbar"></div>
                                <div id="post-editor" class="input--box"></div>
                            </div>
                        </div>
                        <!-- /.box-body -->
                        <div class="box-footer">
                            <div class="pull-right">
                                <button type="submit" class="btn btn-primary btnsubmit float-end" name="submit"><i class="fa fa-envelope"></i>Gửi đi</button>
                                <button type="submit" class="btn btn-secondary btnsubmit float-end" name="save"><i class="fa fa-pencil"></i>Lưu bản nháp</button>
                            </div>
                        </div>

                    </form>
                    <!-- /.box-footer -->
                </div>
                <!-- /. box -->
            </div>
            <!-- /.col -->
        </div>
    </div>
</div>

@section Scripts{
    <script>
            DecoupledEditor
                .create(document.querySelector('#post-editor'), {
                    toolbar: {
                        items: [
                            'selectAll', '|',
                            'heading', '|',
                            'bold', 'italic', 'strikethrough', 'underline', '|',
                            'bulletedList', 'numberedList', '|',
                            'outdent', 'indent', '|',
                            'undo', 'redo',
                            '-',
                            'fontSize', 'fontFamily', 'fontColor', 'fontBackgroundColor', '|',
                            'alignment', '|',
                            'link', 'blockQuote', 'insertTable', 'mediaEmbed', '|',
                        ],
                        shouldNotGroupWhenFull: true
                    },
                    // Changing the language of the interface requires loading the language file using the <script> tag.
                    language: 'vi',
                    list: {
                        properties: {
                            styles: true,
                            startIndex: true,
                            reversed: true
                        }
                    },

                    heading: {
                        options: [
                            { model: 'paragraph', title: 'Paragraph', class: 'ck-heading_paragraph' },
                            { model: 'heading1', view: 'h1', title: 'Heading 1', class: 'ck-heading_heading1' },
                            { model: 'heading2', view: 'h2', title: 'Heading 2', class: 'ck-heading_heading2' },
                            { model: 'heading3', view: 'h3', title: 'Heading 3', class: 'ck-heading_heading3' },
                            { model: 'heading4', view: 'h4', title: 'Heading 4', class: 'ck-heading_heading4' },
                            { model: 'heading5', view: 'h5', title: 'Heading 5', class: 'ck-heading_heading5' },
                            { model: 'heading6', view: 'h6', title: 'Heading 6', class: 'ck-heading_heading6' }
                        ]
                    },

                    // placeholder: 'Welcome to CKEditor 5!',

                    fontFamily: {
                        options: [
                            'default',
                            'Arial, Helvetica, sans-serif',
                            'Courier New, Courier, monospace',
                            'Georgia, serif',
                            'Lucida Sans Unicode, Lucida Grande, sans-serif',
                            'Tahoma, Geneva, sans-serif',
                            'Times New Roman, Times, serif',
                            'Trebuchet MS, Helvetica, sans-serif',
                            'Verdana, Geneva, sans-serif'
                        ],
                        supportAllValues: true
                    },

                    fontSize: {
                        options: [10, 12, 14, 'default', 18, 20, 22],
                        supportAllValues: true
                    },

                })
                .then(editor => {
                    const toolbarContainer = document.querySelector('#post-toolbar');

                    toolbarContainer.prepend(editor.ui.view.toolbar.element);

                    window.editor = editor;
                })
                .catch(err => {
                    console.error(err.stack);
                });

        $('#tags-input').tagsinput();

        $(document).on('click', '.btnsubmit', function () {
            btn = $(this).attr('name');
            if (btn == "submit") {
                $('#post-status').val(0);
            }
            else {
                $('#post-status').val(1);
            }
        });

        $(document).on('change', 'input[name="fileUpload"]', function () {
            let files = $(this).prop("files");
            let formData = new FormData();
            formData.append("file", files[0]);
            $.ajax({
                url: "/admin/blog/uploadfile",
                type: "POST",
                data: formData,
                contentType: false,
                processData: false,
                beforeSend: () => {

                },
                success: res => {
                    console.log(res);
                    $('#image-upload').attr('src', res.fileInfo.filePath);
                    $('#image-file-path').val(res.fileInfo.filePath);
                    $('#image-file-id').val(res.fileInfo.id);
                },
                error: error => {
                    console.log(error);
                }
            })
        });

        $.ajax({
            url: "/Admin/Blog/AuthorInfo",
            type: "GET",
            dataType: "json",
            beforeSend: function () { },
            success: function (data) {
                console.log(data);
                let html = `<img class="profile-user-img img-responsive img-circle" src="${data.avatar}" style="width: 100px; height:100px" alt="User profile picture">
                                            <h3 class="profile-username text-center">${data.authorName}</h3>
                                            <p class="text-muted text-center">${data.authorRole}</p>`
                $('#author-info').append(html);
            },
            error: function () {
                console.log("error!");
            },
            complete: function () { }
        });


        $.ajax({
            url: "/Blog/GetCategoryBlog",
            type: "GET",
            dataType: "json",
            beforeSend: function () { },
            success: function (data) {
                console.log(data);
                data.forEach(function (item, index) {
                    let html = `<option value="${item.id}">${item.name}</option>`;
                    if (item.id == "@categoryId") {
                        html = `<option value="${item.id}" selected>${item.name}</option>`;
                    }
                    $('#category-blog').append(html);
                });
                $("#category-blog").val("@categoryId");
            },
            error: function () {
                console.log("error!");
            },
            complete: function () { }
        });

        $('#category-blog').on('change', function () {
            $('#category-id').val($("#category-blog").val());
        });

                        //$(document).ready(function (){
                        //    CKFinder.setupCKEditor();
                        //    var editor = CKEDITOR.replace('txt-content', {
                        //        customConfig: '/admin/plugins/ckeditor/config.js',
                        //    });
                        //});

    </script>
}

